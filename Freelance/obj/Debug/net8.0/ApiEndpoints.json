[
  {
    "ContainingType": "Freelance.Controllers.AdminController",
    "Method": "GetAllProjectPosts",
    "RelativePath": "api/Admin",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.AdminController",
    "Method": "DeleteProjectProposal",
    "RelativePath": "api/Admin/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.AuthController",
    "Method": "GetUserId",
    "RelativePath": "api/Auth/Get the user who is loged in",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequestDto",
        "Type": "Freelance.Models.DTO.LoginRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerRequestDto",
        "Type": "Freelance.Models.DTO.RegisterRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.ProjectPostController",
    "Method": "GetAllProjects",
    "RelativePath": "api/ProjectPost",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.ProjectPostController",
    "Method": "DeleteAsync",
    "RelativePath": "api/ProjectPost/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.ProjectPostController",
    "Method": "UpdateAsync",
    "RelativePath": "api/ProjectPost/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateDto",
        "Type": "Freelance.Models.DTO.ProjectPostDTO.UpdateProjectPostRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.ProjectPostController",
    "Method": "CreateAsync",
    "RelativePath": "api/ProjectPost/Create-Project-Post",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addProjectPostDto",
        "Type": "Freelance.Models.DTO.ProjectPostDTO.AddProjectPostDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.ProjectPostController",
    "Method": "GetMyProjects",
    "RelativePath": "api/ProjectPost/Get-My-Projects",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.ProposalController",
    "Method": "CreateProposalAsync",
    "RelativePath": "api/Proposal",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addProposalDto",
        "Type": "Freelance.Models.DTO.ProposalDTO.AddProposalDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.ProposalController",
    "Method": "GetAllProposals",
    "RelativePath": "api/Proposal",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.ProposalController",
    "Method": "UpdateProposal",
    "RelativePath": "api/Proposal/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateProposalDto",
        "Type": "Freelance.Models.DTO.ProposalDTO.UpdateProposalDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.ProposalController",
    "Method": "DeleteProposal",
    "RelativePath": "api/Proposal/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.ProposalController",
    "Method": "AcceptProposal",
    "RelativePath": "api/Proposal/accept-proposal/{proposalId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "proposalId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Freelance.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Freelance.WeatherForecast, Freelance, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]